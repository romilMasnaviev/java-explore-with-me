DROP TABLE IF EXISTS compilation_events;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS categories;

CREATE TABLE IF NOT EXISTS users
(
    id    int primary key generated by default as identity,
    name  varchar(250),
    email varchar(254) unique
);

CREATE TABLE IF NOT EXISTS categories
(
    id   int primary key generated by default as identity,
    name varchar(50) unique
);

CREATE TABLE IF NOT EXISTS locations
(
    id  int primary key generated by default as identity,
    lat float,
    lon float
);
CREATE TABLE IF NOT EXISTS compilations
(
    id     int primary key generated by default as identity,
    pinned bool,
    title  varchar(255) unique
);
CREATE TABLE IF NOT EXISTS events
(
    id                 SERIAL PRIMARY KEY NOT NULL,
    annotation         varchar(2000),
    category_id        int references categories (id),
    confirmed_requests int,
    created_on         timestamp,
    description        varchar(7000),
    event_date         timestamp,
    initiator_id       int references users (id),
    location_id        int references locations (id),
    paid               bool,
    participant_limit  int,
    published_on       timestamp,
    request_moderation bool,
    state              varchar(50),
    title              varchar(200),
    views              int
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    primary key (compilation_id, event_id),
    compilation_id int references compilations (id),
    event_id       int references events (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id       int primary key generated by default as identity,
    event_id int references events (id),
    user_id  int references users (id),
    created  timestamp,
    status   varchar(50)
);
ALTER TABLE requests
    ADD CONSTRAINT requests_pk unique (user_id, event_id);
